name: Build Docker Images and Push to AWS ECR

on:
  push:
    branches: [ testing ]
  pull_request:
    branches: [ testing ]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_COMMUNITY_CI_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_COMMUNITY_CI_SECRET_ACCESS_KEY }}
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  proxy:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_TAG: 673099801448.dkr.ecr.eu-west-1.amazonaws.com/discourse-proxy
    steps:
      - uses: actions/checkout@v3
      - name: Build docker image
        run: |
          export DOCKER_IMAGE_TAG_WITH_REVISION="${DOCKER_IMAGE_TAG}:${GITHUB_SHA}"
          aws ecr get-login-password | docker login --username AWS --password-stdin 673099801448.dkr.ecr.eu-west-1.amazonaws.com
          docker pull $DOCKER_IMAGE_TAG
          docker build -t $DOCKER_IMAGE_TAG_WITH_REVISION --cache-from $DOCKER_IMAGE_TAG -f ./docker/nginx.dockerfile ./docker
      - name: Push docker image to AWS ECR
        run: |
          docker push $DOCKER_IMAGE_TAG_WITH_REVISION

  api:
    runs-on: ubuntu-latest
    env:
      DOCKER_IMAGE_TAG: 673099801448.dkr.ecr.eu-west-1.amazonaws.com/discourse-api
    steps:
      - uses: actions/checkout@v3
      - name: Install awscli
        run: pip install --upgrade awscli
      - name: Pull .env from S3
        run: |
          aws s3 cp s3://bloom-config-testing/env-files/commnuity/api.env ./.env
          cat .env >> $GITHUB_ENV
      - name: Build docker image
        run: |
          export DOCKER_IMAGE_TAG_WITH_REVISION="${DOCKER_IMAGE_TAG}:${GITHUB_SHA}"
          aws ecr get-login-password | docker login --username AWS --password-stdin 673099801448.dkr.ecr.eu-west-1.amazonaws.com
          docker pull $DOCKER_IMAGE_TAG
          docker build --build-arg DISCOURSE_MAXMIND_LICENSE_KEY=${DISCOURSE_MAXMIND_LICENSE_KEY} -t $DOCKER_IMAGE_TAG_WITH_REVISION --cache-from $DOCKER_IMAGE_TAG -f ./docker/dockerfile .
      - name: Compile assets and upload them to S3
        run: |
          docker network create discourse
          docker run --rm -d --name discourse_db -e POSTGRES_DB=discourse -e POSTGRES_USER=discourse -e POSTGRES_PASSWORD=password --network discourse postgres:13.4-alpine
          docker run --rm -d --name discourse_cache --network discourse redis:alpine
          docker run --rm -i --name assets_compiler --env-file .env -e DISCOURSE_DB_HOST=discourse_db -e DISCOURSE_DB_PASSWORD=password -e DISCOURSE_REDIS_HOST=discourse_cache --network discourse $DOCKER_IMAGE_TAG_WITH_REVISION sh -c 'bundle exec rake db:prepare && bundle exec rake assets:precompile && bundle exec rake s3:upload_assets'
      - name: Push docker image to AWS ECR
        run: |
          docker push $DOCKER_IMAGE_TAG_WITH_REVISION
          # update the ECS task def and update the service to run the latest task def
          #
          #
          # 1. push image to ECR with new revision hash
          # 2. Update task definition to use the new revision hash
          # 3. Update the service running the task definition to use the new task definition revision
          # 673099801448.dkr.ecr.eu-west-1.amazonaws.com/discourse-api:hash
